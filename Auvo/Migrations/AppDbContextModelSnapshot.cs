// <auto-generated />
using System;
using Auvo.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Auvo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Auvo.Models.Cidade", b =>
                {
                    b.Property<int>("CidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CidadeId"), 1L, 1);

                    b.Property<int>("EstadoId")
                        .HasColumnType("int")
                        .HasColumnName("EstadoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Nome");

                    b.HasKey("CidadeId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("Auvo.Models.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoId"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Nome");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("UF");

                    b.HasKey("EstadoId");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Auvo.Models.PrevisaoClima", b =>
                {
                    b.Property<int>("PrevisaoClimaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrevisaoClimaId"), 1L, 1);

                    b.Property<int>("CidadeId")
                        .HasColumnType("int")
                        .HasColumnName("CidadeId");

                    b.Property<string>("Clima")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Clima");

                    b.Property<DateTime>("DataPrevisao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataPrevisao");

                    b.Property<decimal?>("TemperaturaMaxima")
                        .HasColumnType("numeric(3,1)")
                        .HasColumnName("TemperaturaMaxima");

                    b.Property<decimal?>("TemperaturaMinima")
                        .HasColumnType("numeric(3,1)")
                        .HasColumnName("TemperaturaMinima");

                    b.HasKey("PrevisaoClimaId");

                    b.HasIndex("CidadeId");

                    b.ToTable("PrevisaoClima");
                });

            modelBuilder.Entity("Auvo.Models.Cidade", b =>
                {
                    b.HasOne("Auvo.Models.Estado", "Estado")
                        .WithMany("ListCidade")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Auvo.Models.PrevisaoClima", b =>
                {
                    b.HasOne("Auvo.Models.Cidade", "Cidade")
                        .WithMany("ListPrevisaoClima")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Auvo.Models.Cidade", b =>
                {
                    b.Navigation("ListPrevisaoClima");
                });

            modelBuilder.Entity("Auvo.Models.Estado", b =>
                {
                    b.Navigation("ListCidade");
                });
#pragma warning restore 612, 618
        }
    }
}
